{
  "/base/": [
    [
      "",
      "目录"
    ],
    {
      "name": "algorithm",
      "title": "算法与数据结构",
      "collabsable": false,
      "children": [
        [
          "algorithm/",
          "目录"
        ],
        [
          "algorithm/49",
          "如何实现一个优先级队列"
        ],
        [
          "algorithm/62",
          "如何判断两个链表是否相交⭐️"
        ],
        [
          "algorithm/94",
          "如何实现一个 LRU⭐️"
        ],
        [
          "algorithm/177",
          "如何在数组中找出三个数之和为N"
        ],
        [
          "algorithm/187",
          "写一个关于全排列，全组合的函数⭐️"
        ],
        [
          "algorithm/189",
          "大数乘法和大数加法⭐️"
        ],
        [
          "algorithm/290",
          "如何求数组中的 TOP k⭐️"
        ],
        [
          "algorithm/419",
          "对以下字符串进行压缩编码⭐️"
        ],
        [
          "algorithm/692",
          "求给定数组中 N 个数相加之和为 sum 所有可能集合⭐️"
        ],
        [
          "algorithm/700",
          "求正序增长的正整数数组中，其和为 N 的两个数⭐️"
        ],
        [
          "algorithm/701",
          "100层楼，两个玻璃球，求最少多少次测出能摔碎玻璃球的楼层⭐️"
        ],
        [
          "algorithm/711",
          "如何根据 random5 随机生成 [0, 5]，生成一个函数 random7？⭐️"
        ]
      ]
    },
    {
      "name": "data-structure",
      "title": "数据结构",
      "collabsable": false,
      "children": [
        [
          "data-structure/",
          "目录"
        ],
        [
          "data-structure/331",
          "简述 bloomfilter，及它的使用场景是什么"
        ],
        [
          "data-structure/332",
          "什么是一致性哈希，可以解决什么问题"
        ],
        [
          "data-structure/346",
          "如何查找地图中某个点两公里内的餐厅"
        ]
      ]
    },
    {
      "name": "git",
      "title": "git",
      "collabsable": false,
      "children": [
        [
          "git/",
          "目录"
        ],
        [
          "git/100",
          "git 如何查看某个文件的提交历史⭐️"
        ],
        [
          "git/347",
          "如何列出所有已合并到 master 的分支并删除⭐️"
        ],
        [
          "git/421",
          "git 如何添加与删除一个 submodule⭐️"
        ]
      ]
    },
    {
      "name": "http",
      "title": "http",
      "collabsable": false,
      "children": [
        [
          "http/",
          "目录"
        ],
        [
          "http/36",
          "http 常见的状态码有哪些⭐️"
        ],
        [
          "http/37",
          "http 状态码中 301，302和307有什么区别⭐️"
        ],
        [
          "http/51",
          "http 状态码 502 和 504 有什么区别⭐️"
        ],
        [
          "http/80",
          "简述 http 的缓存机制⭐️"
        ],
        [
          "http/82",
          "http proxy 的原理是什么⭐️"
        ],
        [
          "http/85",
          "随着 http2 的发展，前端性能优化中的哪些传统方案可以被替代⭐️"
        ],
        [
          "http/86",
          "http2 与 http1.1 有什么改进⭐️"
        ],
        [
          "http/108",
          "什么是 Basic Auth 和 Digest Auth"
        ],
        [
          "http/109",
          "gzip 的原理是什么，如何配置⭐️"
        ],
        [
          "http/110",
          "可以对图片开启 gzip 压缩吗，为什么⭐️"
        ],
        [
          "http/111",
          "http 的请求报文与响应报文的格式是什么⭐️"
        ],
        [
          "http/112",
          "http 响应头中的 ETag 值是如何生成的⭐️"
        ],
        [
          "http/113",
          "如果 http 响应头中 ETag 值改变了，是否意味着文件内容一定已经更改⭐️"
        ],
        [
          "http/117",
          "http 服务中静态文件的 Last-Modified 是根据什么生成的⭐️"
        ],
        [
          "http/118",
          "既然 http 是无状态协议，那它是如何保持登录状态⭐️"
        ],
        [
          "http/120",
          "https 是如何保证报文安全的⭐️"
        ],
        [
          "http/122",
          "我们如何从 http 的报文中得知该服务使用的技术栈⭐️"
        ],
        [
          "http/123",
          "在发送 http 请求报文时，Host 是必要的吗⭐️"
        ],
        [
          "http/134",
          "http 响应头中如果 content-type 为 application/octet-stream，则代表什么意思⭐️"
        ],
        [
          "http/137",
          "http 向 https 做重定向应该使用哪个状态码⭐️"
        ],
        [
          "http/142",
          "http 响应头中的 Date 与 Last-Modified 有什么不同，网站部署时需要注意什么⭐️"
        ],
        [
          "http/145",
          "http 1.1 中的 keep-alive 有什么作用⭐️"
        ],
        [
          "http/148",
          "当在浏览器中看到某资源使用了 http2 后，使用 curl 为什么看到的仍是 http 1.1⭐️"
        ],
        [
          "http/150",
          "什么是队首阻塞，如何解决，原理如何"
        ],
        [
          "http/193",
          "简述你们前端项目中资源的缓存配置策略"
        ],
        [
          "http/207",
          "no-cache 与 no-store 的区别是什么⭐️"
        ],
        [
          "http/254",
          "https 中如何保证证书是可信任的"
        ],
        [
          "http/269",
          "CSP 是干什么用的了⭐️"
        ],
        [
          "http/275",
          "http2 中的首部压缩的实现原理是什么⭐️"
        ],
        [
          "http/285",
          "http 请求头中的 X-Forwarded-For 代表什么意思⭐️"
        ],
        [
          "http/303",
          "base64 由哪64个字符构成⭐️"
        ],
        [
          "http/328",
          "关于 cors 的响应头有哪些⭐️"
        ],
        [
          "http/330",
          "如何避免 CDN 为 PC 端缓存移动端页面⭐️"
        ],
        [
          "http/360",
          "在 node 端如何向服务器上传文件"
        ],
        [
          "http/363",
          "什么情况下会发送 OPTIONS 请求⭐️"
        ],
        [
          "http/364",
          "CORS 如果需要指定多个域名怎么办⭐️"
        ],
        [
          "http/366",
          "既然 cors 配置可以做跨域控制，那可以防止 CSRF 攻击吗 ⭐️"
        ],
        [
          "http/392",
          "http2 中 server push 与 websocket 有什么区别⭐️"
        ],
        [
          "http/393",
          "简述下 TLS 握手过程⭐️"
        ],
        [
          "http/397",
          "简单介绍一下 RSA 算法"
        ],
        [
          "http/398",
          "https 层可以做哪些性能优化⭐️"
        ],
        [
          "http/399",
          "ECDHE 与 RSA 有何区别"
        ],
        [
          "http/401",
          "https 中证书的格式化信息有哪些⭐️"
        ],
        [
          "http/402",
          "https 连接时如何保证证书没被废弃掉⭐️"
        ],
        [
          "http/403",
          "TLS1.3 相比 TLS1.2 有何不同⭐️"
        ],
        [
          "http/405",
          "在 wireshark 中如何抓包 https/http2⭐️"
        ],
        [
          "http/408",
          "在 TLS 层如何优化网站性能⭐️"
        ],
        [
          "http/426",
          "DV、OV、EV 类的证书有何区别⭐️"
        ],
        [
          "http/427",
          "https 中是如何进行身份认证的⭐️"
        ],
        [
          "http/438",
          "http 状态码 401 和 403 有什么区别⭐️"
        ],
        [
          "http/441",
          "当服务器资源返回 304 时与那些 HTTP 响应头有关⭐️"
        ],
        [
          "http/450",
          "http3 解决了什么问题⭐️"
        ],
        [
          "http/569",
          "SameSite Cookie 有哪些值，是如何预防 CSRF 攻击的⭐️"
        ],
        [
          "http/575",
          "Data URL 的应用场景⭐️"
        ],
        [
          "http/594",
          "HTTP 响应头 cache-control: s-maxage=0 是什么意思"
        ],
        [
          "http/595",
          "http 缓存控制中 Cach-Control 为 public 与 private 有何区别⭐️"
        ],
        [
          "http/596",
          "http 方法 get 与 post 有何区别⭐️"
        ],
        [
          "http/599",
          "http 状态码  204 使用在什么场景⭐️"
        ],
        [
          "http/600",
          "现代前端应用应如何配置 HTTP 缓存机制⭐️"
        ],
        [
          "http/601",
          "如何确保你们的项目开启了 gzip⭐️"
        ],
        [
          "http/602",
          "HTTP 有哪些常见的请求头和响应头"
        ],
        [
          "http/604",
          "什么是 HSTS ⭐️"
        ],
        [
          "http/605",
          "http 中 referer 请求头是做什么的⭐️"
        ],
        [
          "http/634",
          "在 nginx 中如何配置 HTTP 协商缓存⭐️"
        ],
        [
          "http/635",
          "什么是 base64 与 URL Safe base64⭐️"
        ],
        [
          "http/657",
          "HTTP 与 TCP 中的 keep-alive 各是什么"
        ],
        [
          "http/668",
          "http 各个版本间各有什么改进"
        ],
        [
          "http/669",
          "简述 http3，http3 解决了什么问题⭐️"
        ],
        [
          "http/670",
          "http2 中 Stream 与 Frame 是什么关系⭐️"
        ],
        [
          "http/676",
          "什么是点击劫持(ClickJacking)，如何预防⭐️"
        ],
        [
          "http/706",
          "https 如何被抓包，原理是什么⭐️"
        ],
        [
          "http/718",
          "OSCP Stapling 是什么"
        ],
        [
          "http/722",
          "http client 中如何得知已接收完所有响应数据"
        ]
      ]
    },
    {
      "name": "linux",
      "title": "linux",
      "collabsable": false,
      "children": [
        [
          "linux/",
          "目录"
        ],
        [
          "linux/4",
          "如何获取一个进程的内存并监控⭐️"
        ],
        [
          "linux/29",
          "在linux中如何获取登录的用户⭐️"
        ],
        [
          "linux/31",
          "linux 中如何打印所有网络接口⭐️"
        ],
        [
          "linux/38",
          "linux 有哪些发行版，你最喜欢哪一个⭐️"
        ],
        [
          "linux/42",
          "CoW 策略指什么，docker 中有哪些应用"
        ],
        [
          "linux/44",
          "如何使用命令查看一个文件有多少字符以及多少行⭐️"
        ],
        [
          "linux/56",
          "如何在 linux 中打印所有环境变量⭐️"
        ],
        [
          "linux/71",
          "如何用 linux 命令输出文件的特定行⭐️"
        ],
        [
          "linux/97",
          "cron 表达式 (* 10 * * *) 会如何触发⭐️"
        ],
        [
          "linux/98",
          "cron 表达式 (30 10 * * *) 会如何触发⭐️"
        ],
        [
          "linux/99",
          "在 linux 中如何查看 cron 执行的情况⭐️"
        ],
        [
          "linux/115",
          "如何查看一个文件的 inode number⭐️"
        ],
        [
          "linux/116",
          "文件系统中 mtime、ctime 和 atime 指什么，都有什么不同⭐️"
        ],
        [
          "linux/130",
          "shell 中 ${} 与 $() 各是什么意思⭐️"
        ],
        [
          "linux/146",
          "如何判断端口是否可达⭐️"
        ],
        [
          "linux/163",
          "如何禁止服务器被 ping⭐️"
        ],
        [
          "linux/172",
          "在服务器内如何得知自己的公网IP⭐️"
        ],
        [
          "linux/180",
          "ssh 如何设置 IP whiteList"
        ],
        [
          "linux/200",
          "如何判断文件中的换行符是 LF 还是 CRLF"
        ],
        [
          "linux/278",
          "如何查看 node_modules(某一文件夹) 的体积有多大⭐️"
        ],
        [
          "linux/299",
          "服务器的平均负载如何计算⭐️"
        ],
        [
          "linux/304",
          "多服务器的系统时间不一致如何解决⭐️"
        ],
        [
          "linux/414",
          "什么是 CPU 缓存，如何查看缓存命中率⭐️"
        ],
        [
          "linux/424",
          "什么是 exit code⭐️"
        ],
        [
          "linux/425",
          "什么是 coredump，如何配置与分析"
        ]
      ]
    },
    {
      "name": "network",
      "title": "计算机网络",
      "collabsable": false,
      "children": [
        [
          "network/",
          "目录"
        ],
        [
          "network/2",
          "当 ping 一个 IP 地址时发生了什么⭐️"
        ],
        [
          "network/26",
          "简述 TCP socket 建立的过程⭐️"
        ],
        [
          "network/31",
          "linux 中如何打印所有网络接口⭐️"
        ],
        [
          "network/46",
          "如何把一个 CIDR 地址转化为IP地址范围段"
        ],
        [
          "network/55",
          "简述TCP 的三次握手⭐️"
        ],
        [
          "network/88",
          "什么是 CNAME 记录和 A 记录⭐️"
        ],
        [
          "network/121",
          "TCP 是如何保证可靠性的⭐️"
        ],
        [
          "network/128",
          "vpn 的原理是什么⭐️"
        ],
        [
          "network/135",
          "ssh 的原理是什么⭐️"
        ],
        [
          "network/174",
          "简述 UDP socket 建立的过程⭐️"
        ],
        [
          "network/175",
          "TCP 三次握手发生在 socket 建立的哪一步"
        ],
        [
          "network/183",
          "简述 TCP 的四次挥手，三次挥手可以吗⭐️"
        ],
        [
          "network/184",
          "tcp 中 time_wait 堆积过多会有什么问题，为什么它超时时间这么长"
        ],
        [
          "network/365",
          "localhost 与 127.0.0.1 有什么区别⭐️"
        ],
        [
          "network/381",
          "TCP 四次挥手时为什么需要 2MSL⭐️"
        ],
        [
          "network/397",
          "简单介绍一下 RSA 算法"
        ],
        [
          "network/657",
          "HTTP 与 TCP 中的 keep-alive 各是什么"
        ]
      ]
    },
    {
      "name": "os",
      "title": "操作系统",
      "collabsable": false,
      "children": [
        [
          "os/",
          "目录"
        ],
        [
          "os/50",
          "什么是守护进程⭐️"
        ],
        [
          "os/54",
          "什么是对象存储，与块存储和文件存储有什么区别"
        ],
        [
          "os/64",
          "SIGINT SIGTERM SIGKILL 有什么区别⭐️"
        ],
        [
          "os/66",
          "有没有使用过 oss，对象存储相比块存储和文件存储有什么优缺点⭐️"
        ],
        [
          "os/107",
          "什么是IO多路复用⭐️"
        ],
        [
          "os/116",
          "文件系统中 mtime、ctime 和 atime 指什么，都有什么不同⭐️"
        ],
        [
          "os/124",
          "如何监控文件的变动⭐️"
        ],
        [
          "os/139",
          "一个守护进程的创建步骤是什么，如何用 C 语言创建"
        ],
        [
          "os/141",
          "Node 中 cluster 的原理是什么⭐️"
        ],
        [
          "os/171",
          "什么是文件描述符 (file descriptor)⭐️"
        ],
        [
          "os/256",
          "进程与线程的区别是什么"
        ],
        [
          "os/300",
          "如何创建一个进程⭐️"
        ],
        [
          "os/424",
          "什么是 exit code⭐️"
        ],
        [
          "os/425",
          "什么是 coredump，如何配置与分析"
        ],
        [
          "os/459",
          "同一进程的线程共享那些资源⭐️"
        ],
        [
          "os/690",
          "什么是原码、补码与反码⭐️"
        ]
      ]
    },
    {
      "name": "shell",
      "title": "shell",
      "collabsable": false,
      "children": [
        [
          "shell/",
          "目录"
        ],
        [
          "shell/316",
          "source 与 sh 执行脚本时有何区别⭐️"
        ],
        [
          "shell/719",
          "npm 执行命令传递参数时，为何需要双横线⭐️"
        ]
      ]
    },
    {
      "name": "tcp",
      "title": "tcp",
      "collabsable": false,
      "children": [
        [
          "tcp/",
          "目录"
        ],
        [
          "tcp/431",
          "TCP 是如何进行流量控制的 (flow control)⭐️"
        ],
        [
          "tcp/433",
          "TCP 报文中的选项 Window scale 是什么意思"
        ],
        [
          "tcp/434",
          "TCP 报文中的 ack number 如何计算"
        ],
        [
          "tcp/680",
          "TCP 是如何进行拥塞控制的⭐️"
        ]
      ]
    },
    {
      "name": "vim",
      "title": "vim",
      "collabsable": false,
      "children": [
        [
          "vim/",
          "目录"
        ],
        [
          "vim/45",
          "如何使用vim查看文件有多少个字符以及多少行⭐️"
        ]
      ]
    }
  ],
  "/server/": [
    [
      "",
      "目录"
    ],
    {
      "name": "c",
      "title": "C语言",
      "collabsable": false,
      "children": [
        [
          "c/",
          "目录"
        ],
        [
          "c/139",
          "一个守护进程的创建步骤是什么，如何用 C 语言创建"
        ],
        [
          "c/164",
          "如何创建一个线程⭐️"
        ],
        [
          "c/167",
          "在C语言中，void * 是什么意思⭐️"
        ],
        [
          "c/168",
          "每个指针所占的存储空间是多少⭐️"
        ],
        [
          "c/173",
          "C语言中 printf 与 puts 有什么区别⭐️"
        ],
        [
          "c/175",
          "TCP 三次握手发生在 socket 建立的哪一步"
        ],
        [
          "c/300",
          "如何创建一个进程⭐️"
        ],
        [
          "c/440",
          "在C语言中，void 是什么意思⭐️"
        ]
      ]
    },
    {
      "name": "db",
      "title": "数据库",
      "collabsable": false,
      "children": [
        [
          "db/",
          "目录"
        ],
        [
          "db/7",
          "如何写一个 SQL 获取分组 top n 的数据⭐️"
        ],
        [
          "db/8",
          "如何写一个 SQL 获取分组 top 1 的数据 ⭐️"
        ],
        [
          "db/25",
          "在 postgres 中，查询时如何对 jsonb 数据格式化⭐️"
        ],
        [
          "db/159",
          "数据库 postgres 与 mysql 相比有哪些优劣"
        ],
        [
          "db/181",
          "当执行 SQL 语句 select * from user where id = 1 时发什么了什么"
        ],
        [
          "db/208",
          "什么是隔离级"
        ],
        [
          "db/209",
          "在 postgres 中如何查看慢查询语句"
        ],
        [
          "db/210",
          "如何得知一条 SQL 执行的时长？"
        ],
        [
          "db/213",
          "在 postgres/mysql 中如何判断当前版本是多少⭐️"
        ],
        [
          "db/214",
          "什么是隔离级，都有哪些隔离级⭐️"
        ],
        [
          "db/223",
          "数据库中如何查看当前的连接数⭐️"
        ],
        [
          "db/224",
          "数据库查询如何更好地利用数据库缓存进行优化"
        ],
        [
          "db/225",
          "误操作了一个 delete from 语句，如何恢复数据"
        ],
        [
          "db/227",
          "数据库死锁是怎么产生的⭐️"
        ],
        [
          "db/230",
          "在数据库中一个字段如果是字符串类型的，那应该设置哪种数据类型⭐️"
        ],
        [
          "db/234",
          "一个关于并发更新的事务以及隔离级的问题⭐️"
        ],
        [
          "db/235",
          "以下 SQL 语句会有什么问题 (悲观锁)⭐️"
        ],
        [
          "db/272",
          "一张员工表，一个字段代表它的上级，如何查询该员工的所有上级"
        ],
        [
          "db/277",
          "解释下 OLTP 与 OLAP"
        ],
        [
          "db/333",
          "mysql 如何开启及查看慢查询日志"
        ],
        [
          "db/334",
          "当分页10000页时数据库查询 offset 过大如何解决性能问题"
        ],
        [
          "db/335",
          "当数据库进行版本升级时，如何进行数据迁移"
        ],
        [
          "db/336",
          "mysql 是如何实现 MVCC 的"
        ],
        [
          "db/343",
          "试着讲述数据库的几个范式"
        ],
        [
          "db/344",
          "为什么在 mysql 不能够使用 = null"
        ],
        [
          "db/345",
          "`A, B` 复合索引时，`A=? and B=?` 与 `B=? and A=?` 效果是否一致"
        ],
        [
          "db/348",
          "postgres 中 Index Scan 与 Index Only Scan 有何区别⭐️"
        ],
        [
          "db/371",
          "如何保存数据库与缓存的双写一致性"
        ],
        [
          "db/384",
          "你们的后端项目的数据库索引做了哪些优化"
        ],
        [
          "db/386",
          "什么是覆盖索引⭐️"
        ],
        [
          "db/445",
          "数据库设计时 char 与 varchar 有什么区别"
        ],
        [
          "db/467",
          "mysql 中 limit offset 过大导致查询缓慢的原因及解决方案⭐️"
        ]
      ]
    },
    {
      "name": "graphql",
      "title": "graphql",
      "collabsable": false,
      "children": [
        [
          "graphql/",
          "目录"
        ],
        [
          "graphql/52",
          "简述一下 graphql，它的引进有什么好处"
        ],
        [
          "graphql/53",
          "graphql 的引进有什么风险，以及性能问题"
        ],
        [
          "graphql/188",
          "当编辑 graphql 的 query 时，如何在编辑器中自动补全"
        ],
        [
          "graphql/423",
          "apollo-client 与 react-apollo 在前端应用中扮演什么角色"
        ],
        [
          "graphql/439",
          "如何给 graphql 设计合理的 Rate Limit⭐️"
        ]
      ]
    },
    {
      "name": "micro-service",
      "title": "微服务",
      "collabsable": false,
      "children": [
        [
          "micro-service/",
          "目录"
        ],
        [
          "micro-service/57",
          "什么是服务降级"
        ],
        [
          "micro-service/58",
          "什么是熔断机制，微服务如何做熔断⭐️"
        ],
        [
          "micro-service/59",
          "什么是负载均衡"
        ],
        [
          "micro-service/60",
          "四层负载均衡与七层负载均衡有什么区别⭐️"
        ],
        [
          "micro-service/61",
          "你们项目中的计划任务是如何组织的⭐️"
        ],
        [
          "micro-service/63",
          "RPC 与 REST 有什么优劣⭐️"
        ],
        [
          "micro-service/65",
          "如何实现服务发现 (Service Discovery)⭐️"
        ],
        [
          "micro-service/77",
          "如何设计一个短网址生成服务⭐️"
        ],
        [
          "micro-service/125",
          "如何保证内网服务的安全性⭐️"
        ],
        [
          "micro-service/136",
          "负载均衡有哪几种方式，它们的原理是什么⭐️"
        ],
        [
          "micro-service/156",
          "当服务升级或者回退时，如何保证流量平滑切换"
        ],
        [
          "micro-service/239",
          "什么是服务雪崩，如何避免"
        ],
        [
          "micro-service/248",
          "谈谈你对微服务的理解，试着画一个脑图"
        ],
        [
          "micro-service/304",
          "多服务器的系统时间不一致如何解决⭐️"
        ],
        [
          "micro-service/320",
          "如何设计 prometheus 中的 metric"
        ],
        [
          "micro-service/349",
          "Sentry 中 `withScope`，`configureScope` 与 直接 setTags 有何区别"
        ],
        [
          "micro-service/353",
          "如何实现一个 timeout 的中间件"
        ],
        [
          "micro-service/464",
          "简述 RPC 的实现原理"
        ],
        [
          "micro-service/465",
          "如何对微服务进行拆分"
        ]
      ]
    },
    {
      "name": "redis",
      "title": "redis",
      "collabsable": false,
      "children": [
        [
          "redis/",
          "目录"
        ],
        [
          "redis/21",
          "如何实现一个分布式锁⭐️"
        ],
        [
          "redis/40",
          "redis 的持久化方案有哪些⭐️"
        ],
        [
          "redis/151",
          "redis 中 zset 是什么，用作什么应用场景⭐️"
        ],
        [
          "redis/289",
          "在 redis 中如何查看版本号⭐️"
        ],
        [
          "redis/329",
          "如何发现 redis 中的 bigkey"
        ],
        [
          "redis/371",
          "如何保存数据库与缓存的双写一致性"
        ],
        [
          "redis/377",
          "redis 是如何删掉过期数据的"
        ],
        [
          "redis/390",
          "什么是缓存穿透，如何解决⭐️"
        ],
        [
          "redis/413",
          "在你们的后端应用中，redis 用在哪些场景⭐️"
        ],
        [
          "redis/491",
          "如何使用 redis 计算 wordcount，并计算出现频率最高的词"
        ],
        [
          "redis/659",
          "redis 中的哨兵与集群模式各是什么"
        ]
      ]
    },
    {
      "name": "server",
      "title": "后端基础",
      "collabsable": false,
      "children": [
        [
          "server/",
          "目录"
        ],
        [
          "server/6",
          "生产环境的某个接口报错，如何定位⭐️"
        ],
        [
          "server/17",
          "后端的敏感数据在生产环境是如何配置的⭐️"
        ],
        [
          "server/21",
          "如何实现一个分布式锁⭐️"
        ],
        [
          "server/24",
          "websocket 服务多节点部署时会有什么问题，怎么解决⭐️"
        ],
        [
          "server/27",
          "如何对接口进行压力测试⭐️"
        ],
        [
          "server/30",
          "websocket 如何向特定的用户组推送消息⭐️"
        ],
        [
          "server/34",
          "如何对接口进行限流⭐️"
        ],
        [
          "server/48",
          "如何设计一个高并发系统"
        ],
        [
          "server/102",
          "你们后端代码上线部署一次需要多长时间⭐️"
        ],
        [
          "server/108",
          "什么是 Basic Auth 和 Digest Auth"
        ],
        [
          "server/154",
          "权限设计中的 RABC 是指什么⭐️"
        ],
        [
          "server/157",
          "如何进行代码质量检测⭐️"
        ],
        [
          "server/158",
          "如何管理生产环境多个数据库的配置，如何快速连接"
        ],
        [
          "server/233",
          "当有大量的文本库时，如何做一个字云"
        ],
        [
          "server/262",
          "如何实现单点登录⭐️"
        ],
        [
          "server/288",
          "在服务端应用中如何获得客户端 IP⭐️"
        ],
        [
          "server/328",
          "关于 cors 的响应头有哪些⭐️"
        ],
        [
          "server/353",
          "如何实现一个 timeout 的中间件"
        ],
        [
          "server/363",
          "什么情况下会发送 OPTIONS 请求⭐️"
        ],
        [
          "server/368",
          "如何获取当前系统中的在线用户数 (并发用户数)⭐️"
        ],
        [
          "server/384",
          "你们的后端项目的数据库索引做了哪些优化"
        ],
        [
          "server/404",
          "什么是 oauth2，它解决了什么问题"
        ],
        [
          "server/430",
          "什么是安全的正则表达式⭐️"
        ],
        [
          "server/435",
          "在 nginx 中如何配置负载均衡⭐️"
        ],
        [
          "server/439",
          "如何给 graphql 设计合理的 Rate Limit⭐️"
        ],
        [
          "server/459",
          "同一进程的线程共享那些资源⭐️"
        ],
        [
          "server/466",
          "服务器CPU过高时如何排查及解决问题⭐️"
        ],
        [
          "server/496",
          "OAuth 2.0 的原理是什么"
        ],
        [
          "server/497",
          "JWT 的原理是什么"
        ],
        [
          "server/617",
          "什么是认证与授权"
        ],
        [
          "server/621",
          "判断以下路由，将会响应哪一个路由⭐️"
        ],
        [
          "server/627",
          "请简述重新登录 refresh token 的原理⭐️"
        ]
      ]
    },
    {
      "name": "serverless",
      "title": "serverless",
      "collabsable": false,
      "children": [
        [
          "serverless/",
          "目录"
        ],
        [
          "serverless/301",
          "serverless 中如何得知目前扩容了多少个实例"
        ],
        [
          "serverless/322",
          "如何衡量 serverless 的冷启动时间"
        ]
      ]
    },
    {
      "name": "爬虫",
      "title": "爬虫",
      "collabsable": false,
      "children": [
        [
          "爬虫/",
          "目录"
        ],
        [
          "爬虫/259",
          "爬虫中如何实现一个调度器"
        ],
        [
          "爬虫/260",
          "如何实现一个分布式的爬虫⭐️"
        ],
        [
          "爬虫/261",
          "爬虫如何实现一个去重器"
        ],
        [
          "爬虫/263",
          "当写爬虫时，因爬取过多被禁掉 IP 怎么解决⭐️"
        ],
        [
          "爬虫/468",
          "在服务端反爬虫有哪些策略⭐️"
        ]
      ]
    }
  ],
  "/fe/": [
    [
      "",
      "目录"
    ],
    {
      "name": "code",
      "title": "手写代码",
      "collabsable": false,
      "children": [
        [
          "code/",
          "目录"
        ],
        [
          "code/3",
          "什么是防抖和节流，他们的应用场景有哪些⭐️"
        ],
        [
          "code/23",
          "如何实现一个简单的 Promise⭐️"
        ],
        [
          "code/32",
          "js 中如何实现 bind⭐️"
        ],
        [
          "code/89",
          "如何实现 promise.map，限制 promise 并发数⭐️"
        ],
        [
          "code/199",
          "如何实现类似 lodash.get 函数⭐️"
        ],
        [
          "code/203",
          "如何实现一个深拷贝 (cloneDeep)⭐️"
        ],
        [
          "code/229",
          "如何实现一个 flatMap 函数 (头条)⭐️"
        ],
        [
          "code/241",
          "如何实现一个 async/await ⭐️"
        ],
        [
          "code/251",
          "使用 js 实现一个 lru cache⭐️"
        ],
        [
          "code/314",
          "如何实现 Promise.race⭐️"
        ],
        [
          "code/406",
          "实现一个 once 函数，记忆返回结果只执行一次⭐️"
        ],
        [
          "code/418",
          "如何找到当前页面出现次数最多的HTML标签⭐️"
        ],
        [
          "code/419",
          "对以下字符串进行压缩编码⭐️"
        ],
        [
          "code/428",
          "如何实现一个无限累加的 sum 函数⭐️"
        ],
        [
          "code/436",
          "实现一个函数用来解析 URL 的 querystring⭐️"
        ],
        [
          "code/442",
          "JS 如何实现一个 sleep/delay 函数⭐️"
        ],
        [
          "code/443",
          "如何实现一个 sample 函数，从数组中随机取一个元素⭐️"
        ],
        [
          "code/447",
          "JSONP 的原理是什么，如何实现⭐️"
        ],
        [
          "code/448",
          "实现一个函数用来对 URL 的 querystring 进行编码⭐️"
        ],
        [
          "code/451",
          "实现一个数组扁平化的函数 flatten ⭐️"
        ],
        [
          "code/455",
          "如何实现一个数组洗牌函数 shuffle⭐️"
        ],
        [
          "code/498",
          "如何实现一个函数 lodash.merge⭐️"
        ],
        [
          "code/500",
          "如何实现一个 Promise.all⭐️"
        ],
        [
          "code/576",
          "实现一个 inherits 函数进行继承⭐️"
        ],
        [
          "code/582",
          "如何逆序一个字符串⭐️"
        ],
        [
          "code/610",
          "给数字添加千位符⭐️"
        ],
        [
          "code/614",
          "如何实现一个深比较的函数 deepEqual⭐️"
        ],
        [
          "code/620",
          "在 JS 中如何监听 Object 某个属性值的变化⭐️"
        ],
        [
          "code/625",
          "关于字符串编码解码进阶⭐️"
        ],
        [
          "code/631",
          "如何使用 JS 实现一个发布订阅模式⭐️"
        ],
        [
          "code/637",
          "使用 JS 如何生成一个随机字符串⭐️"
        ],
        [
          "code/641",
          "如何判断一个数值为整数⭐️"
        ],
        [
          "code/643",
          "简述 koa 的中间件原理，手写 koa-compose 代码⭐️"
        ],
        [
          "code/646",
          "实现一个函数 maxBy，根据给定条件找到最大的数组项⭐️"
        ],
        [
          "code/647",
          "实现一个函数 max，找到数组中最大的一个值/两个值/N个值⭐️"
        ],
        [
          "code/652",
          "统计字符串中出现次数最多的字符及次数⭐️"
        ],
        [
          "code/653",
          "请输出 100 以内的菲波那切数列⭐️"
        ],
        [
          "code/655",
          "如何使用正则匹配一个汉字⭐️"
        ],
        [
          "code/656",
          "如何把字符串全部转化为小写格式⭐️"
        ],
        [
          "code/658",
          "如何实现数组函数 reduce⭐️"
        ],
        [
          "code/661",
          "如何实现 chunk 函数，数组进行分组⭐️"
        ],
        [
          "code/662",
          "实现一个异步的 sum/add⭐️"
        ],
        [
          "code/663",
          "随机生成六位数的手机验证码(重复/不可重复)⭐️"
        ],
        [
          "code/667",
          "如何去除字符串首尾空白字符⭐️"
        ],
        [
          "code/673",
          "实现 intersection，取数组交集⭐️"
        ],
        [
          "code/675",
          "实现一个 composeLeft/flow(从左向右) 函数，进行函数合成⭐️"
        ],
        [
          "code/678",
          "实现一个 render/template 函数，可以用以渲染模板⭐️"
        ],
        [
          "code/681",
          "给定一个数值，给出它在 IEEE754 的表示，如符号位、指数位与分数位⭐️"
        ],
        [
          "code/684",
          "实现二进制与十进制的互相转化的两个函数⭐️"
        ],
        [
          "code/692",
          "求给定数组中 N 个数相加之和为 sum 所有可能集合⭐️"
        ],
        [
          "code/696",
          "如何实现一个 sampleSize 函数，从数组中随机取N个元素 ⭐️"
        ],
        [
          "code/697",
          "实现一个函数 keyBy⭐️"
        ],
        [
          "code/698",
          "实现一个函数 groupBy⭐️"
        ],
        [
          "code/700",
          "求正序增长的正整数数组中，其和为 N 的两个数⭐️"
        ],
        [
          "code/702",
          "FizzBuzz，是否能被3或5整除⭐️"
        ],
        [
          "code/703",
          "实现一个函数  camelCase，对变量转化为驼峰命名"
        ],
        [
          "code/710",
          "JS 中如何原生实现 instanceOf⭐️"
        ],
        [
          "code/711",
          "如何根据 random5 随机生成 [0, 5]，生成一个函数 random7？⭐️"
        ],
        [
          "code/712",
          "如何实现一个 ORM 类似的 find 链式调用⭐️"
        ],
        [
          "code/723",
          "实现函数 promisify，把回调函数改成 promise 形式⭐️"
        ]
      ]
    },
    {
      "name": "css",
      "title": "css",
      "collabsable": false,
      "children": [
        [
          "css/",
          "目录"
        ],
        [
          "css/10",
          "如何实现一个元素的水平垂直居中⭐️"
        ],
        [
          "css/18",
          "css 如何实现左侧固定300px，右侧自适应的布局⭐️"
        ],
        [
          "css/35",
          "如何实现一个 loading 动画⭐️"
        ],
        [
          "css/176",
          "如何使用 css 写一个魔方"
        ],
        [
          "css/179",
          "如何使用 css 写一个有 3D 效果的立方体⭐️"
        ],
        [
          "css/185",
          "有没有使用过 css variable，它解决了哪些问题⭐️"
        ],
        [
          "css/186",
          "谈谈你对 styled-component 的看法⭐️"
        ],
        [
          "css/191",
          "使用 CSS 如何画一个三角形⭐️"
        ],
        [
          "css/281",
          "display: inline 的元素设置 margin 和 padding 会生效吗⭐️"
        ],
        [
          "css/282",
          "html 的默认 display 属性是多少⭐️"
        ],
        [
          "css/283",
          "响应式布局需要注意哪一些⭐️"
        ],
        [
          "css/284",
          "对一个非定长宽的块状元素如何做垂直水平居中⭐️"
        ],
        [
          "css/308",
          "如何实现左右固定，中间自适应布局⭐️"
        ],
        [
          "css/309",
          "如何实现表格单双行条纹样式⭐️"
        ],
        [
          "css/311",
          "简述下 css specificity⭐️"
        ],
        [
          "css/317",
          "'+' 与 '~' 选择器有什么不同⭐️"
        ],
        [
          "css/319",
          "有哪些 css 属性不能展示动画效果"
        ],
        [
          "css/321",
          "css 动画与 js 动画哪个性能更好⭐️"
        ],
        [
          "css/323",
          " css 中属性选择器及类选择器的权重哪个高⭐️"
        ],
        [
          "css/327",
          "为什么会发生样式抖动"
        ],
        [
          "css/337",
          "position: sticky 如何工作，适用于哪些场景⭐️"
        ],
        [
          "css/338",
          "什么是层叠上下文 (stacking contect)，谈谈对它的理解"
        ],
        [
          "css/339",
          "你用 css 实现过什么不错的效果"
        ],
        [
          "css/340",
          "你做前端有多少时间花在写 css 上⭐️"
        ],
        [
          "css/342",
          "伪类与伪元素有什么区别⭐️"
        ],
        [
          "css/369",
          "css 如何匹配前N个子元素及最后N个子元素⭐️"
        ],
        [
          "css/375",
          "如何使用 CSS 实现网站的暗黑模式 (Dark Mode)⭐️"
        ],
        [
          "css/452",
          "介绍 CSS 隐藏页面中某个元素的几种方法⭐️"
        ],
        [
          "css/473",
          "css 如何实现响应式布局大屏幕三等分、中屏幕二等分、小屏幕一等分⭐️"
        ],
        [
          "css/476",
          "前端开发中如何进行多主题配置"
        ],
        [
          "css/479",
          "如何自定义滚动条的样式⭐️"
        ],
        [
          "css/486",
          "如何实现容器中子元素三个三列布局，子元素两个则两列布局"
        ],
        [
          "css/489",
          "网站设置字体时，如何设置优先使用系统默认字体⭐️"
        ],
        [
          "css/493",
          "写 CSS 时如何避免命名样式冲突⭐️"
        ],
        [
          "css/501",
          "CSS 如何设置方格背景⭐️"
        ],
        [
          "css/505",
          "如何更好地给元素设置 z-index"
        ],
        [
          "css/514",
          "画一个 100x100 的方框，其中文字可以正常换行，文字过多超过方框显示滚动条⭐️"
        ],
        [
          "css/518",
          "Grid 布局如何实现类似 flex: row-reverse"
        ],
        [
          "css/529",
          "HTML 标签有哪些行内元素⭐️"
        ],
        [
          "css/530",
          "CSS如何设置一行超出显示省略号⭐️"
        ],
        [
          "css/531",
          "CSS如何设置多行超出显示省略号⭐️"
        ],
        [
          "css/538",
          "flex 布局中 order 有何作用⭐️"
        ],
        [
          "css/539",
          "flex 布局中 align-content 与 align-items 有何区别⭐️"
        ],
        [
          "css/544",
          "子元素垂直居中，并且该正方形的长度/宽度为父容器宽度(width)一半的正方形⭐️"
        ],
        [
          "css/545",
          "简述 css 中 position 的值⭐️"
        ],
        [
          "css/546",
          "什么是 BFC⭐️"
        ],
        [
          "css/547",
          "CSS 如何实现固定长宽比的元素⭐️"
        ],
        [
          "css/548",
          "rem、em、vw、vh 的值各是什么意思⭐️"
        ],
        [
          "css/549",
          "normalize.css 与 reset.css 又何区别⭐️"
        ],
        [
          "css/550",
          "line-height 的值分别取 [2, 2em, 200%] 有什么区别?⭐️"
        ],
        [
          "css/561",
          "某元素的 fontSize: 2rem; lineHeight: 1.5em; 此时 lineHeight 为多少像素"
        ],
        [
          "css/567",
          "Grid 布局的优势在哪里⭐️"
        ],
        [
          "css/572",
          "如何实现三列均分布局⭐️"
        ],
        [
          "css/578",
          "什么是媒体查询，JS 可以监听媒体查询吗⭐️"
        ],
        [
          "css/579",
          "z-index: 999 元素一定会置于 z-index: 0 元素之上吗⭐️"
        ],
        [
          "css/626",
          "请简介 CSS 的盒模型⭐️"
        ],
        [
          "css/638",
          "CSS 有哪些选择器⭐️"
        ],
        [
          "css/639",
          "CSS 有哪些伪类与伪元素选择器⭐️"
        ],
        [
          "css/672",
          "css加载会阻塞DOM树的解析和渲染吗⭐️"
        ],
        [
          "css/687",
          "在 CSS 中，使用 rem 作为单位有何缺点⭐️"
        ],
        [
          "css/716",
          "Flex 布局中的 flex-basis 与 width 有何区别⭐️"
        ]
      ]
    },
    {
      "name": "dom",
      "title": "dom",
      "collabsable": false,
      "children": [
        [
          "dom/",
          "目录"
        ],
        [
          "dom/1",
          "网站开发中，如何实现图片的懒加载⭐️"
        ],
        [
          "dom/161",
          "如何设置一个 cookie⭐️"
        ],
        [
          "dom/162",
          "如何删除一个 cookie⭐️"
        ],
        [
          "dom/211",
          "如何判断当前环境是移动端还是PC端⭐️"
        ],
        [
          "dom/215",
          "input 中监听值的变化是在监听什么事件⭐️"
        ],
        [
          "dom/216",
          "什么是跨域，如何解决跨域问题⭐️"
        ],
        [
          "dom/269",
          "CSP 是干什么用的了⭐️"
        ],
        [
          "dom/286",
          "prefetch 与 preload 的区别是什么⭐️"
        ],
        [
          "dom/297",
          "fetch 中 crendentials 指什么意思，可以取什么值⭐️"
        ],
        [
          "dom/313",
          "当 cookie 没有设置 maxage 时，cookie 会存在多久⭐️"
        ],
        [
          "dom/315",
          "在浏览器中如何监听剪切板中内容⭐️"
        ],
        [
          "dom/367",
          "js 动画和 css 动画那个性能比较好"
        ],
        [
          "dom/379",
          "简单介绍 requestIdleCallback 及使用场景⭐️"
        ],
        [
          "dom/418",
          "如何找到当前页面出现次数最多的HTML标签⭐️"
        ],
        [
          "dom/432",
          "什么是层叠上下文 (stacking context)⭐️"
        ],
        [
          "dom/437",
          "如何把 DOM 转化为图片⭐️"
        ],
        [
          "dom/444",
          "浏览器的剪切板中如何监听复制事件⭐️"
        ],
        [
          "dom/447",
          "JSONP 的原理是什么，如何实现⭐️"
        ],
        [
          "dom/454",
          "如何实现页面文本不可复制⭐️"
        ],
        [
          "dom/456",
          "异步加载 JS 脚本时，async 与 defer 有何区别⭐️"
        ],
        [
          "dom/462",
          "load 事件与 DomContentLoaded 事件的先后顺序⭐️"
        ],
        [
          "dom/463",
          "React/Vue 中的 router 实现原理如何⭐️"
        ],
        [
          "dom/471",
          "前端如何实现文件上传功能⭐️"
        ],
        [
          "dom/480",
          "什么是 HTML 的实体编码 (HTML Entity Encode)⭐️"
        ],
        [
          "dom/502",
          "如何取消请求的发送⭐️"
        ],
        [
          "dom/556",
          "DOM 中如何阻止事件默认行为，如何判断事件否可阻止？⭐️"
        ],
        [
          "dom/557",
          "什么是事件冒泡和事件捕获"
        ],
        [
          "dom/558",
          "什么是事件委托，e.currentTarget 与 e.target 有何区别⭐️"
        ],
        [
          "dom/559",
          "关于事件捕获和冒泡，以下代码输出多少⭐️"
        ],
        [
          "dom/560",
          "浏览器中 cookie 有哪些字段⭐️"
        ],
        [
          "dom/562",
          "DOM 中 Element 与 Node 有何区别⭐️"
        ],
        [
          "dom/569",
          "SameSite Cookie 有哪些值，是如何预防 CSRF 攻击的⭐️"
        ],
        [
          "dom/570",
          "sessionStorage与localStorage有何区别"
        ],
        [
          "dom/571",
          "如何设置一个支持过期时间的 localStorage⭐️"
        ],
        [
          "dom/573",
          "如何统计当前页面出现的所有标签⭐️"
        ],
        [
          "dom/574",
          "如何监听 localStorage 的变动⭐️"
        ],
        [
          "dom/575",
          "Data URL 的应用场景⭐️"
        ],
        [
          "dom/580",
          "浏览器中事件有哪些属性与方法"
        ],
        [
          "dom/585",
          "浏览器中如何读取二进制信息⭐️"
        ],
        [
          "dom/611",
          "React 中监听 input 的 onChange 事件的原生事件是什么⭐️"
        ],
        [
          "dom/612",
          "在浏览器中点击 a 标签保存为文件如何做⭐️"
        ],
        [
          "dom/664",
          "如何禁止打开浏览器控制台⭐️"
        ],
        [
          "dom/685",
          "简述下 WebWorker，它如何进行通信⭐️"
        ],
        [
          "dom/689",
          "浏览器中监听事件函数 addEventListener 第三个参数有那些值⭐️"
        ],
        [
          "dom/694",
          "浏览器中 Frame 与 Event Loop 的关系是什么⭐️"
        ]
      ]
    },
    {
      "name": "html",
      "title": "html",
      "collabsable": false,
      "children": [
        [
          "html/",
          "目录"
        ],
        [
          "html/1",
          "网站开发中，如何实现图片的懒加载⭐️"
        ],
        [
          "html/20",
          "浏览器中如何实现剪切板复制内容的功能⭐️"
        ],
        [
          "html/127",
          "localhost:3000 与 localhost:5000 的 cookie 信息是否共享⭐️"
        ],
        [
          "html/160",
          "什么是 CSRF 攻击⭐️"
        ],
        [
          "html/315",
          "在浏览器中如何监听剪切板中内容⭐️"
        ],
        [
          "html/352",
          "如何把 json 数据转化为 demo.json 并下载文件⭐️"
        ],
        [
          "html/379",
          "简单介绍 requestIdleCallback 及使用场景⭐️"
        ],
        [
          "html/469",
          "如何计算白屏时间和首屏时间⭐️"
        ],
        [
          "html/472",
          "什么是重排重绘，如何减少重拍重绘⭐️"
        ],
        [
          "html/477",
          "HTML 中的 input 标签有哪些 type⭐️"
        ],
        [
          "html/478",
          "什么是 Data URL⭐️"
        ],
        [
          "html/480",
          "什么是 HTML 的实体编码 (HTML Entity Encode)⭐️"
        ],
        [
          "html/484",
          "textarea 如何禁止拉伸⭐️"
        ],
        [
          "html/485",
          "在 Canvas 中如何处理跨域的图片⭐️"
        ],
        [
          "html/502",
          "如何取消请求的发送⭐️"
        ],
        [
          "html/529",
          "HTML 标签有哪些行内元素⭐️"
        ],
        [
          "html/543",
          "HTML 中有哪些语义化标签⭐️"
        ],
        [
          "html/598",
          "什么是 URL 编码 (URL Encode)⭐️"
        ]
      ]
    },
    {
      "name": "js",
      "title": "js",
      "collabsable": false,
      "children": [
        [
          "js/",
          "目录"
        ],
        [
          "js/3",
          "什么是防抖和节流，他们的应用场景有哪些⭐️"
        ],
        [
          "js/23",
          "如何实现一个简单的 Promise⭐️"
        ],
        [
          "js/28",
          "在前端开发中，如何获取浏览器的唯一标识⭐️"
        ],
        [
          "js/32",
          "js 中如何实现 bind⭐️"
        ],
        [
          "js/33",
          "js 中什么是 softbind，如何实现⭐️"
        ],
        [
          "js/89",
          "如何实现 promise.map，限制 promise 并发数⭐️"
        ],
        [
          "js/103",
          "有没有用 npm 发布过 package，如何发布⭐️"
        ],
        [
          "js/138",
          "js 代码压缩 minify 的原理是什么⭐️"
        ],
        [
          "js/149",
          "关于 JSON，以下代码输出什么⭐️"
        ],
        [
          "js/160",
          "什么是 CSRF 攻击⭐️"
        ],
        [
          "js/169",
          "在 js 中如何把类数组转化为数组⭐️"
        ],
        [
          "js/170",
          "Array(100).map(x => 1) 结果是多少⭐️"
        ],
        [
          "js/178",
          "如何在 url 中传递数组⭐️"
        ],
        [
          "js/182",
          "如何实现 compose 函数，进行函数合成⭐️"
        ],
        [
          "js/197",
          "前端中遇到过处理二进制的场景吗⭐️"
        ],
        [
          "js/198",
          "什么是 TypedArray⭐️"
        ],
        [
          "js/199",
          "如何实现类似 lodash.get 函数⭐️"
        ],
        [
          "js/202",
          "js 中什么是可选链操作符，如何访问数组⭐️"
        ],
        [
          "js/203",
          "如何实现一个深拷贝 (cloneDeep)⭐️"
        ],
        [
          "js/216",
          "什么是跨域，如何解决跨域问题⭐️"
        ],
        [
          "js/221",
          "请简述一下 event loop⭐️"
        ],
        [
          "js/229",
          "如何实现一个 flatMap 函数 (头条)⭐️"
        ],
        [
          "js/231",
          "如何裁剪图片 (情景：选择头像)⭐️"
        ],
        [
          "js/241",
          "如何实现一个 async/await ⭐️"
        ],
        [
          "js/242",
          "如何使用 async/await 实现 Promise.all 的效果⭐️"
        ],
        [
          "js/245",
          "有没有遇到 js 捕捉不到异常堆栈信息的情况"
        ],
        [
          "js/247",
          "有没有用过 Promise.allSettled() ，它是干什么的⭐️"
        ],
        [
          "js/251",
          "使用 js 实现一个 lru cache⭐️"
        ],
        [
          "js/255",
          "cookie 有哪些字段⭐️"
        ],
        [
          "js/265",
          "你们项目的测试覆盖率是怎么做的"
        ],
        [
          "js/268",
          "bind 与 call/apply 的区别是什么⭐️"
        ],
        [
          "js/274",
          "如何查看你们 JS 项目中应采用的 node 版本⭐️"
        ],
        [
          "js/287",
          "有没有做过裁剪头像图片的需求，如何实现"
        ],
        [
          "js/293",
          "简述 node/v8 中的垃圾回收机制⭐️"
        ],
        [
          "js/297",
          "fetch 中 crendentials 指什么意思，可以取什么值⭐️"
        ],
        [
          "js/307",
          "如何删除项目中没有使用到的 package⭐️"
        ],
        [
          "js/314",
          "如何实现 Promise.race⭐️"
        ],
        [
          "js/341",
          "js 中在 new 的时候发生了什么⭐️"
        ],
        [
          "js/358",
          "什么是 Iterable 对象，与 Array 有什么区别⭐️"
        ],
        [
          "js/361",
          "js 如何全部替代一个子串为另一个子串⭐️"
        ],
        [
          "js/382",
          "在 js 中如何实现继承⭐️"
        ],
        [
          "js/389",
          "python 中的 self 与 javascript 中的 this 有何不同"
        ],
        [
          "js/396",
          "以下输出顺序多少 (setTimeout 与 promise 顺序)⭐️"
        ],
        [
          "js/406",
          "实现一个 once 函数，记忆返回结果只执行一次⭐️"
        ],
        [
          "js/409",
          "如何实现一个函数 isPlainObject 判断是否为纯对象⭐️"
        ],
        [
          "js/428",
          "如何实现一个无限累加的 sum 函数⭐️"
        ],
        [
          "js/429",
          "JS 如何实现一个同步的 sleep 函数⭐️"
        ],
        [
          "js/436",
          "实现一个函数用来解析 URL 的 querystring⭐️"
        ],
        [
          "js/442",
          "JS 如何实现一个 sleep/delay 函数⭐️"
        ],
        [
          "js/443",
          "如何实现一个 sample 函数，从数组中随机取一个元素⭐️"
        ],
        [
          "js/444",
          "浏览器的剪切板中如何监听复制事件⭐️"
        ],
        [
          "js/447",
          "JSONP 的原理是什么，如何实现⭐️"
        ],
        [
          "js/448",
          "实现一个函数用来对 URL 的 querystring 进行编码⭐️"
        ],
        [
          "js/449",
          "v8 是如何执行一段 JS 代码的⭐️"
        ],
        [
          "js/451",
          "实现一个数组扁平化的函数 flatten ⭐️"
        ],
        [
          "js/452",
          "介绍 CSS 隐藏页面中某个元素的几种方法⭐️"
        ],
        [
          "js/453",
          "实现一个数组去重函数 unique⭐️"
        ],
        [
          "js/454",
          "如何实现页面文本不可复制⭐️"
        ],
        [
          "js/455",
          "如何实现一个数组洗牌函数 shuffle⭐️"
        ],
        [
          "js/456",
          "异步加载 JS 脚本时，async 与 defer 有何区别⭐️"
        ],
        [
          "js/457",
          "vue3 中，如何监听数组的变化⭐️"
        ],
        [
          "js/460",
          "现代框架如 React、Vue 相比原生开发有什么优势⭐️"
        ],
        [
          "js/461",
          "typeof 与 instanceof 的区别⭐️"
        ],
        [
          "js/470",
          "JS 如何翻转一个字符串⭐️"
        ],
        [
          "js/471",
          "前端如何实现文件上传功能⭐️"
        ],
        [
          "js/481",
          "关于模块化，什么是 amd 和 umd⭐️"
        ],
        [
          "js/482",
          "简单介绍以下浏览器中的 module⭐️"
        ],
        [
          "js/483",
          "什么是 commonjs2 "
        ],
        [
          "js/487",
          "前端上传文件时如何读取文件内容⭐️"
        ],
        [
          "js/488",
          "你最喜欢的三个 js 库是什么⭐️"
        ],
        [
          "js/490",
          "现代化前端框架中如何进行调试"
        ],
        [
          "js/498",
          "如何实现一个函数 lodash.merge⭐️"
        ],
        [
          "js/499",
          "如何实现一个 promise.any⭐️"
        ],
        [
          "js/500",
          "如何实现一个 Promise.all⭐️"
        ],
        [
          "js/503",
          "如何过滤数组中的 falsy value⭐️"
        ],
        [
          "js/504",
          "如何把一个数组随机打乱⭐️"
        ],
        [
          "js/515",
          "JS 中基础数据类型有哪些⭐️"
        ],
        [
          "js/520",
          "如何创建一个数组大小为100，每个值都为0的数组⭐️"
        ],
        [
          "js/526",
          "有没有使用过 async/await，他们的原理是什么⭐️"
        ],
        [
          "js/527",
          "什么是闭包，闭包的应用有哪些地方⭐️"
        ],
        [
          "js/528",
          "关于事件循环，一道异步代码执行输出顺序问题⭐️"
        ],
        [
          "js/540",
          "解构赋值一个数组，a 取第一项默认值为 3，c取剩下的值组成数组⭐️"
        ],
        [
          "js/541",
          "解构赋值以下对象，他们的值是多少⭐️"
        ],
        [
          "js/542",
          "Map 与 WeakMap 有何区别⭐️"
        ],
        [
          "js/553",
          "Javascript 数组中有那些方法可以改变自身，那些不可以⭐️"
        ],
        [
          "js/554",
          "如何判断一个数组是否包含某个值⭐️"
        ],
        [
          "js/555",
          "如何判断字符串包含某个子串⭐️"
        ],
        [
          "js/563",
          "如何判断某一个值是数组⭐️"
        ],
        [
          "js/564",
          "简述 Object.defineProperty ⭐️"
        ],
        [
          "js/565",
          "Object.keys 与 Object.getOwnPropertyNames() 有何区别⭐️"
        ],
        [
          "js/573",
          "如何统计当前页面出现的所有标签⭐️"
        ],
        [
          "js/576",
          "实现一个 inherits 函数进行继承⭐️"
        ],
        [
          "js/577",
          "WeakMap 与垃圾回收有何关系⭐️"
        ],
        [
          "js/578",
          "什么是媒体查询，JS 可以监听媒体查询吗⭐️"
        ],
        [
          "js/581",
          "关于块级作用域，以下代码输出多少，在何时间输出⭐️"
        ],
        [
          "js/582",
          "如何逆序一个字符串⭐️"
        ],
        [
          "js/583",
          "为何 0.1+0.2 不等于 0.3，应如何做相等比较⭐️"
        ],
        [
          "js/584",
          "关于 this 与包装对象，以下输出多少⭐️"
        ],
        [
          "js/586",
          "关于类型转化，判断以下代码输出⭐️"
        ],
        [
          "js/587",
          "关于暂时性死域，判断以下代码输出⭐️"
        ]
      ]
    },
    {
      "name": "node",
      "title": "node",
      "collabsable": false,
      "children": [
        [
          "node/",
          "目录"
        ],
        [
          "node/119",
          "有没有读过 koa 的源码，什么是洋葱模型呢⭐️"
        ],
        [
          "node/124",
          "如何监控文件的变动⭐️"
        ],
        [
          "node/140",
          "在 Node 应用中如何利用多核心CPU的优势⭐️"
        ],
        [
          "node/141",
          "Node 中 cluster 的原理是什么⭐️"
        ],
        [
          "node/205",
          "Node 中如何判断一个路径是文件还是文件夹⭐️"
        ],
        [
          "node/238",
          "以下代码，koa 会返回什么数据⭐️"
        ],
        [
          "node/240",
          "Node 如何进行进程间通信 ⭐️"
        ],
        [
          "node/244",
          "有没有用过 continuous local storage，用在了哪里"
        ],
        [
          "node/246",
          "Promise 在异步资源的生命周期 (async_hooks) 中是如何被销毁的"
        ],
        [
          "node/249",
          "在 node 中如何监听异步资源的生命周期"
        ],
        [
          "node/250",
          "测试中 TDD 与 BDD 有什么区别"
        ],
        [
          "node/253",
          "node --max-old-space-size=4096 是什么意思"
        ],
        [
          "node/258",
          "如何理解 Node 的异步非阻塞IO"
        ],
        [
          "node/266",
          "当 Node 应用发生 gc 时，如何监控"
        ],
        [
          "node/267",
          "Node 应用中如何查看 gc 的日志⭐️"
        ],
        [
          "node/276",
          "如何获取你们 Node 项目的 cpu profile 快照"
        ],
        [
          "node/291",
          "Node 中循环引用会发生什么⭐️"
        ],
        [
          "node/292",
          "Node 中 require 时发生了什么⭐️"
        ],
        [
          "node/293",
          "简述 node/v8 中的垃圾回收机制⭐️"
        ],
        [
          "node/302",
          "node 中 exec，fork 与 spawn 有何区别"
        ],
        [
          "node/310",
          "node 中 dns.resolve 及 dns.lookup 有什么区别⭐️"
        ],
        [
          "node/312",
          "Node 中 require json 文件数据时，如何当文件更新时，重新 require⭐️"
        ],
        [
          "node/318",
          "node 中如何查看函数异步调用栈"
        ],
        [
          "node/324",
          "有没有接触过 fs-extra，它是解决什么问题的"
        ],
        [
          "node/350",
          "在 node 中如何开启 https⭐️"
        ],
        [
          "node/351",
          "node 中 module.exports 与 exports 有什么区别⭐️"
        ],
        [
          "node/353",
          "如何实现一个 timeout 的中间件"
        ],
        [
          "node/354",
          "如何得知目前 node 版本的 v8 版本号⭐️"
        ],
        [
          "node/357",
          "在 node 中如何判断一个对象是 stream⭐️"
        ],
        [
          "node/360",
          "在 node 端如何向服务器上传文件"
        ],
        [
          "node/370",
          "node 中 nextTick 与 setTimeout 有什么区别⭐️"
        ],
        [
          "node/420",
          "如何在生产环境部署一个 Node 应用"
        ],
        [
          "node/492",
          "express 中间件的原理是什么"
        ],
        [
          "node/525",
          "如何检测并避免循环依赖⭐️"
        ],
        [
          "node/532",
          "如何发布一个全局可执行命令的 npm package⭐️"
        ],
        [
          "node/591",
          "如何正确得知某张图片的 MIME 格式"
        ],
        [
          "node/621",
          "判断以下路由，将会响应哪一个路由⭐️"
        ],
        [
          "node/627",
          "请简述重新登录 refresh token 的原理⭐️"
        ],
        [
          "node/643",
          "简述 koa 的中间件原理，手写 koa-compose 代码⭐️"
        ],
        [
          "node/649",
          "在 Node 中如何读写文件⭐️"
        ],
        [
          "node/650",
          "在 Node 中如何发送请求⭐️"
        ],
        [
          "node/651",
          "Node 中服务端框架如何解析 http 的请求体 body⭐️"
        ],
        [
          "node/660",
          "在 Node 中流 (stream) 分为几类，有哪些应用场景⭐️"
        ],
        [
          "node/682",
          "请简述下 Node 与浏览器环境中的事件循环⭐️"
        ],
        [
          "node/693",
          "在 Node 中如何读取可读流的内容⭐️"
        ],
        [
          "node/699",
          "在 Node 中如何读取大文件的内容⭐️"
        ],
        [
          "node/720",
          "有没有使用过 Node 的 inspect 这个核心模块⭐️"
        ]
      ]
    },
    {
      "name": "perf",
      "title": "性能优化",
      "collabsable": false,
      "children": [
        [
          "perf/",
          "目录"
        ],
        [
          "perf/286",
          "prefetch 与 preload 的区别是什么⭐️"
        ],
        [
          "perf/406",
          "实现一个 once 函数，记忆返回结果只执行一次⭐️"
        ],
        [
          "perf/644",
          "如何压缩前端项目中 JS 的体积⭐️"
        ],
        [
          "perf/645",
          "如何优化 React 项目的性能⭐️"
        ],
        [
          "perf/688",
          "如何提高首屏渲染时间？⭐️"
        ],
        [
          "perf/705",
          "网站性能优化中，如何对小图片进行优化⭐️"
        ]
      ]
    },
    {
      "name": "react",
      "title": "react",
      "collabsable": false,
      "children": [
        [
          "react/",
          "目录"
        ],
        [
          "react/9",
          "当新入职一家公司时，如何快速搭建开发环境并让应用跑起来⭐️"
        ],
        [
          "react/11",
          "了解 React 中的 ErrorBoundary 吗，它有那些使用场景⭐️"
        ],
        [
          "react/14",
          "有没有使用过 react hooks，它带来了那些便利⭐️"
        ],
        [
          "react/15",
          "如何使用 react hooks 实现一个计数器的组件⭐️"
        ],
        [
          "react/22",
          "React 中，cloneElement 与 createElement 各是什么，有什么区别⭐️"
        ],
        [
          "react/39",
          "使用 react 实现一个通用的 message 组件"
        ],
        [
          "react/67",
          "如何使用 react hooks 实现 useFetch 请求数据⭐️"
        ],
        [
          "react/68",
          "react 如何使用 render prop component 请求数据⭐️"
        ],
        [
          "react/69",
          "React Portal 有哪些使用场景⭐️"
        ],
        [
          "react/70",
          "什么是 virtual DOM，它的引入带了什么好处⭐️"
        ],
        [
          "react/72",
          "react 与 vue 数组中 key 的作用是什么⭐️"
        ],
        [
          "react/93",
          "react 中 ref 是干什么用的，有哪些使用场景⭐️"
        ],
        [
          "react/101",
          "如何使用 react/vue 实现一个 message API⭐️"
        ],
        [
          "react/143",
          "react hooks 中如何模拟 componentDidMount⭐️"
        ],
        [
          "react/147",
          "如果使用 SSR，可以在 created/componentWillMount 中访问 localStorage 吗⭐️"
        ],
        [
          "react/152",
          "react hooks 如何替代或部分替代 redux 功能⭐️"
        ],
        [
          "react/153",
          "如何实现一个 react hook，你有没有自己写过一个⭐️"
        ],
        [
          "react/155",
          "在 react/vue 中数组是否可以以在数组中的次序为 key⭐️"
        ],
        [
          "react/165",
          "React 中 fiber 是用来做什么的⭐️"
        ],
        [
          "react/212",
          "React hooks 中 useCallback 的使用场景是什么⭐️"
        ],
        [
          "react/236",
          "useEffect 中如何使用 async/await⭐️"
        ],
        [
          "react/273",
          "react hooks 的原理是什么⭐️"
        ],
        [
          "react/279",
          "redux 解决什么问题，还有什么其他方案⭐️"
        ],
        [
          "react/280",
          "为什么不能在表达式里面定义 react hooks⭐️"
        ],
        [
          "react/372",
          "redux 和 mobx 有什么不同"
        ],
        [
          "react/373",
          "关于 React hooks 的 caputre value，以下输出多少⭐️"
        ],
        [
          "react/374",
          "在 React 项目中 immutable 是优化性能的"
        ],
        [
          "react/376",
          "在 redux 中如何发送请求"
        ],
        [
          "react/380",
          "在 redux 中如何写一个记录状态变更的日志插件"
        ],
        [
          "react/383",
          "React 在 setState 时发生了什么⭐️"
        ],
        [
          "react/385",
          "如何设计一个UI组件库"
        ],
        [
          "react/410",
          "React 中的 dom diff 算法如何从 O(n3) 优化到 O(n) 的⭐️"
        ],
        [
          "react/411",
          "在 React 应用中如何排查性能问题"
        ],
        [
          "react/415",
          "React 17.0 有什么变化"
        ],
        [
          "react/460",
          "现代框架如 React、Vue 相比原生开发有什么优势⭐️"
        ],
        [
          "react/463",
          "React/Vue 中的 router 实现原理如何⭐️"
        ],
        [
          "react/474",
          "在 SSR 项目中如何判断当前环境时服务器端还是浏览器端⭐️"
        ],
        [
          "react/506",
          "React.setState 是同步还是异步的⭐️"
        ],
        [
          "react/507",
          "什么是服务器渲染 (SSR)⭐️"
        ],
        [
          "react/508",
          "在 React 中如何实现代码分割 (code splitting)⭐️"
        ],
        [
          "react/510",
          "在 React 中如何做好性能优化⭐️"
        ],
        [
          "react/511",
          "在 React 中发现状态更新时卡顿，此时应该如何定位及优化"
        ],
        [
          "react/512",
          "当多次重复点击按钮时，以下三个 Heading 是如何渲染的⭐️"
        ],
        [
          "react/553",
          "Javascript 数组中有那些方法可以改变自身，那些不可以⭐️"
        ],
        [
          "react/566",
          "关于 setState 以下代码的输出"
        ],
        [
          "react/606",
          "React 中什么是合成事件⭐️"
        ],
        [
          "react/608",
          "前端项目中有哪些副作用"
        ],
        [
          "react/609",
          "React/Vue 中受控组件与不受控组件的区别"
        ],
        [
          "react/611",
          "React 中监听 input 的 onChange 事件的原生事件是什么⭐️"
        ],
        [
          "react/616",
          "在 React hooks 中如何模拟 forceUpdate⭐️"
        ],
        [
          "react/629",
          "React/Vue 中兄弟组件如何进行通信⭐️"
        ],
        [
          "react/630",
          "React.memo 中是如何实现性能优化的⭐️"
        ],
        [
          "react/632",
          "immer 的原理是什么，为什么它的性能更高⭐️"
        ],
        [
          "react/633",
          "React.useMemo 与 React.useCallback 是如何进行性能优化的"
        ],
        [
          "react/642",
          "同一页面三个组件请求同一个 API 发送了三次请求，如何优化⭐️"
        ],
        [
          "react/645",
          "如何优化 React 项目的性能⭐️"
        ],
        [
          "react/671",
          "useLayoutEffect 和 useEffect 有什么区别⭐️"
        ],
        [
          "react/677",
          "在 React Hooks 中实现 usePreviouseValue 取上次渲染的值⭐️"
        ],
        [
          "react/721",
          "在虚拟 DOM 中进行 diff 算法时，介绍当根据 key 对数组进行重用时的算法"
        ]
      ]
    },
    {
      "name": "regexp",
      "title": "正则",
      "collabsable": false,
      "children": [
        [
          "regexp/",
          "目录"
        ],
        [
          "regexp/655",
          "如何使用正则匹配一个汉字⭐️"
        ],
        [
          "regexp/678",
          "实现一个 render/template 函数，可以用以渲染模板⭐️"
        ]
      ]
    },
    {
      "name": "ts",
      "title": "ts",
      "collabsable": false,
      "children": [
        [
          "ts/",
          "目录"
        ],
        [
          "ts/695",
          "在 Typescript 中如何实现类型标记 Pick 与 Omit⭐️"
        ],
        [
          "ts/713",
          "什么是协变与逆变⭐️"
        ],
        [
          "ts/714",
          "在 ts 中如何实现 Partial⭐️"
        ],
        [
          "ts/715",
          "在 ts 中什么是 infer，并实现 Parameters 与 ReturnType⭐️"
        ],
        [
          "ts/730",
          "typescript 中 interface 与 type 有何区别⭐️"
        ],
        [
          "ts/731",
          "请简述 typescript 中的 infer"
        ]
      ]
    },
    {
      "name": "vue",
      "title": "vue",
      "collabsable": false,
      "children": [
        [
          "vue/",
          "目录"
        ],
        [
          "vue/9",
          "当新入职一家公司时，如何快速搭建开发环境并让应用跑起来⭐️"
        ],
        [
          "vue/12",
          "vue3.0 中为什么要使用 Proxy，它相比以前的实现方式有什么改进⭐️"
        ],
        [
          "vue/72",
          "react 与 vue 数组中 key 的作用是什么⭐️"
        ],
        [
          "vue/90",
          "vue 中 v-if 和 v-show 的区别是什么⭐️"
        ],
        [
          "vue/91",
          "vue 中 computed 的原理是什么⭐️"
        ],
        [
          "vue/92",
          "vue-loader 的实现原理是什么⭐️"
        ],
        [
          "vue/101",
          "如何使用 react/vue 实现一个 message API⭐️"
        ],
        [
          "vue/147",
          "如果使用 SSR，可以在 created/componentWillMount 中访问 localStorage 吗⭐️"
        ],
        [
          "vue/155",
          "在 react/vue 中数组是否可以以在数组中的次序为 key⭐️"
        ],
        [
          "vue/385",
          "如何设计一个UI组件库"
        ],
        [
          "vue/457",
          "vue3 中，如何监听数组的变化⭐️"
        ],
        [
          "vue/458",
          "Vue 中 nextTick 的实现原理是什么⭐️"
        ],
        [
          "vue/460",
          "现代框架如 React、Vue 相比原生开发有什么优势⭐️"
        ],
        [
          "vue/463",
          "React/Vue 中的 router 实现原理如何⭐️"
        ],
        [
          "vue/608",
          "前端项目中有哪些副作用"
        ],
        [
          "vue/609",
          "React/Vue 中受控组件与不受控组件的区别"
        ],
        [
          "vue/629",
          "React/Vue 中兄弟组件如何进行通信⭐️"
        ],
        [
          "vue/721",
          "在虚拟 DOM 中进行 diff 算法时，介绍当根据 key 对数组进行重用时的算法"
        ]
      ]
    },
    {
      "name": "webpack",
      "title": "webpack",
      "collabsable": false,
      "children": [
        [
          "webpack/",
          "目录"
        ],
        [
          "webpack/73",
          "webpack 是用来做什么的，原理是什么⭐️"
        ],
        [
          "webpack/74",
          "webpack 中的 loader 的作用是什么⭐️"
        ],
        [
          "webpack/75",
          "有没有自己写过一个webpack的loader⭐️"
        ],
        [
          "webpack/76",
          "webpack 中plugin的作用是什么，有没有自己写过"
        ],
        [
          "webpack/78",
          "使用 webpack 时如何优化项目体积⭐️"
        ],
        [
          "webpack/79",
          "webpack 中什么是 HMR，原理是什么⭐️"
        ],
        [
          "webpack/81",
          "使用 webpack 打包时，如何更好地利用 long term cache⭐️"
        ],
        [
          "webpack/83",
          "随着 http2 的发展，webpack 有没有更好的打包方案"
        ],
        [
          "webpack/87",
          "Tree Shaking 的原理是什么⭐️"
        ],
        [
          "webpack/92",
          "vue-loader 的实现原理是什么⭐️"
        ],
        [
          "webpack/204",
          "对于已经 import 但未实际使用的模块使用 webpack 还会对它打包吗？⭐️"
        ],
        [
          "webpack/206",
          "Code Splitting 的原理是什么⭐️"
        ],
        [
          "webpack/603",
          "使用 webpack 如何分包"
        ],
        [
          "webpack/644",
          "如何压缩前端项目中 JS 的体积⭐️"
        ],
        [
          "webpack/729",
          "webpack 的 runtime 做了什么事情⭐️"
        ],
        [
          "webpack/733",
          "webpack 中的 code spliting 是如何动态加载 chunk 的？⭐️"
        ],
        [
          "webpack/735",
          "打包器(webpack/rollup) 如何将打包后的 js 资源注入 html 中⭐️"
        ],
        [
          "webpack/736",
          "打包器(webpack/rollup) 如何加载 json、image 等非 Javascript 资源⭐️"
        ],
        [
          "webpack/737",
          "打包器(webpack/rollup) 如何加载 style 样式资源"
        ],
        [
          "webpack/738",
          "如何提升 webpack 构建资源的速度⭐️"
        ]
      ]
    },
    {
      "name": "前端工程化",
      "title": "前端工程化",
      "collabsable": false,
      "children": [
        [
          "前端工程化/",
          "目录"
        ],
        [
          "前端工程化/9",
          "当新入职一家公司时，如何快速搭建开发环境并让应用跑起来⭐️"
        ],
        [
          "前端工程化/84",
          "网站性能优化都有哪些点⭐️"
        ],
        [
          "前端工程化/95",
          "你们的前端代码上线部署一次需要多长时间，需要人为干预吗⭐️"
        ],
        [
          "前端工程化/103",
          "有没有用 npm 发布过 package，如何发布⭐️"
        ],
        [
          "前端工程化/138",
          "js 代码压缩 minify 的原理是什么⭐️"
        ],
        [
          "前端工程化/154",
          "权限设计中的 RABC 是指什么⭐️"
        ],
        [
          "前端工程化/157",
          "如何进行代码质量检测⭐️"
        ],
        [
          "前端工程化/190",
          "performance API 中什么指标可以衡量首屏时间⭐️"
        ],
        [
          "前端工程化/192",
          "什么是 Open Graph 协议，用来做什么⭐️"
        ],
        [
          "前端工程化/193",
          "简述你们前端项目中资源的缓存配置策略"
        ],
        [
          "前端工程化/194",
          "如何加速 npm install⭐️"
        ],
        [
          "前端工程化/195",
          "npm i 与 npm ci 的区别是什么⭐️"
        ],
        [
          "前端工程化/196",
          "package-lock.json 有什么作用，如果项目中没有它会怎么样，举例说明⭐️"
        ],
        [
          "前端工程化/201",
          "前端如何进行多分支部署"
        ],
        [
          "前端工程化/237",
          "主域名的 SEO 是否比二级域名要更好⭐️"
        ],
        [
          "前端工程化/252",
          "刚刚启动了一个服务，如何知道这个服务对应的端口号是多少⭐️"
        ],
        [
          "前端工程化/257",
          "图片防盗链原理是什么⭐️"
        ],
        [
          "前端工程化/270",
          "你如何看待 serverless"
        ],
        [
          "前端工程化/271",
          "什么是 XSS 攻击，如何避免⭐️"
        ],
        [
          "前端工程化/274",
          "如何查看你们 JS 项目中应采用的 node 版本⭐️"
        ],
        [
          "前端工程化/278",
          "如何查看 node_modules(某一文件夹) 的体积有多大⭐️"
        ],
        [
          "前端工程化/294",
          "peerDependency 是为了解决什么问题⭐️"
        ],
        [
          "前端工程化/295",
          "semver 指什么，试图解释一下"
        ],
        [
          "前端工程化/296",
          "optionalDependencies 的使用场景是什么⭐️"
        ],
        [
          "前端工程化/298",
          "package-lock.json 与 yarn.lock 有什么区别"
        ],
        [
          "前端工程化/378",
          "如何为你们的前端项目选择状态管理器"
        ],
        [
          "前端工程化/391",
          "什么是浏览器的关键渲染路径⭐️"
        ],
        [
          "前端工程化/412",
          "你使用过哪些前端性能分析工具⭐️"
        ],
        [
          "前端工程化/422",
          "你有没有重客户端状态前端应用的经验"
        ],
        [
          "前端工程化/430",
          "什么是安全的正则表达式⭐️"
        ],
        [
          "前端工程化/435",
          "在 nginx 中如何配置负载均衡⭐️"
        ],
        [
          "前端工程化/475",
          "前端打包时 cjs、es、umd 模块有何不同⭐️"
        ],
        [
          "前端工程化/495",
          "什么是前端工程化⭐️"
        ],
        [
          "前端工程化/497",
          "JWT 的原理是什么"
        ],
        [
          "前端工程化/507",
          "什么是服务器渲染 (SSR)⭐️"
        ],
        [
          "前端工程化/513",
          "Core Web Vitals 是什么，它有哪些指标⭐️"
        ],
        [
          "前端工程化/521",
          "dependencies 与 devDependencies 有何区别⭐️"
        ],
        [
          "前端工程化/522",
          "如何确认你们项目是否依赖某一个依赖项⭐️"
        ],
        [
          "前端工程化/523",
          "当你引入某一个依赖项时，你引入的是该依赖下的哪一个文件⭐️"
        ],
        [
          "前端工程化/524",
          "npm workspaces 解决了什么问题⭐️"
        ],
        [
          "前端工程化/533",
          "如何为一个项目指定 node 版本号⭐️"
        ],
        [
          "前端工程化/534",
          "什么是 semver，~1.2.3 与 ^1.2.3 的版本号范围是多少⭐️"
        ],
        [
          "前端工程化/535",
          "package.json 中 main/module/browser/exports 字段有何区别⭐️"
        ],
        [
          "前端工程化/536",
          "npm publish 时 npm script 的生命周期⭐️"
        ],
        [
          "前端工程化/537",
          "前端项目每次 npm install 之后需要执行一些处理工作，应该怎么办⭐️"
        ],
        [
          "前端工程化/552",
          "你是如何保障你们项目质量的⭐️"
        ],
        [
          "前端工程化/591",
          "如何正确得知某张图片的 MIME 格式"
        ],
        [
          "前端工程化/600",
          "现代前端应用应如何配置 HTTP 缓存机制⭐️"
        ],
        [
          "前端工程化/603",
          "使用 webpack 如何分包"
        ],
        [
          "前端工程化/613",
          "引入 BFF 层的优势在哪里⭐️"
        ],
        [
          "前端工程化/642",
          "同一页面三个组件请求同一个 API 发送了三次请求，如何优化⭐️"
        ],
        [
          "前端工程化/644",
          "如何压缩前端项目中 JS 的体积⭐️"
        ],
        [
          "前端工程化/654",
          "你们项目中使用了哪些依赖/第三方库"
        ],
        [
          "前端工程化/664",
          "如何禁止打开浏览器控制台⭐️"
        ],
        [
          "前端工程化/688",
          "如何提高首屏渲染时间？⭐️"
        ],
        [
          "前端工程化/719",
          "npm 执行命令传递参数时，为何需要双横线⭐️"
        ],
        [
          "前端工程化/722",
          "http client 中如何得知已接收完所有响应数据"
        ],
        [
          "前端工程化/734",
          "core-js 是做什么用的？⭐️"
        ],
        [
          "前端工程化/739",
          "如何处理白屏错误页的监控的？"
        ],
        [
          "前端工程化/740",
          "简述 npm script 的生命周期⭐️"
        ],
        [
          "前端工程化/741",
          "git hooks 原理是什么⭐️"
        ],
        [
          "前端工程化/742",
          "如何检测出你们安装的依赖是否安全⭐️"
        ]
      ]
    }
  ],
  "/devops/": [
    [
      "",
      "目录"
    ],
    {
      "name": "devops",
      "title": "devops",
      "collabsable": false,
      "children": [
        [
          "devops/",
          "目录"
        ],
        [
          "devops/9",
          "当新入职一家公司时，如何快速搭建开发环境并让应用跑起来⭐️"
        ],
        [
          "devops/16",
          "你们的前端项目是如何在线上部署的⭐️"
        ],
        [
          "devops/19",
          "当你使用 docker 部署应用时，如何查看应用日志⭐️"
        ],
        [
          "devops/95",
          "你们的前端代码上线部署一次需要多长时间，需要人为干预吗⭐️"
        ],
        [
          "devops/102",
          "你们后端代码上线部署一次需要多长时间⭐️"
        ],
        [
          "devops/166",
          "什么是公有云，私有云，混合云以及多重云⭐️"
        ],
        [
          "devops/252",
          "刚刚启动了一个服务，如何知道这个服务对应的端口号是多少⭐️"
        ],
        [
          "devops/407",
          "如何评估一台服务器的 CPU 性能⭐️"
        ],
        [
          "devops/414",
          "什么是 CPU 缓存，如何查看缓存命中率⭐️"
        ],
        [
          "devops/416",
          "什么是 BNF 与 ABNF⭐️"
        ],
        [
          "devops/420",
          "如何在生产环境部署一个 Node 应用"
        ]
      ]
    },
    {
      "name": "docker",
      "title": "docker",
      "collabsable": false,
      "children": [
        [
          "docker/",
          "目录"
        ],
        [
          "docker/42",
          "CoW 策略指什么，docker 中有哪些应用"
        ],
        [
          "docker/43",
          "docker 中如何查看某个容器消耗的内存和CPU⭐️"
        ],
        [
          "docker/47",
          "docker 中的网络隔离是如何实现的⭐️"
        ],
        [
          "docker/126",
          "docker 中如何为每个容器的 cpu/memory 设限，原理是什么"
        ],
        [
          "docker/129",
          "构建镜像时，那几个指令会增加镜像层数⭐️"
        ],
        [
          "docker/131",
          "docker 如何隔离容器与宿主机的时间"
        ],
        [
          "docker/132",
          "在 docker 的容器中，如何访问宿主机的 localhost"
        ],
        [
          "docker/133",
          "如何在 docker 中运行 docker"
        ],
        [
          "docker/144",
          "docker-compose 部署 docker 时，如何把宿主机的环境变量注入到容器中"
        ]
      ]
    },
    {
      "name": "k8s",
      "title": "k8s",
      "collabsable": false,
      "children": [
        [
          "k8s/",
          "目录"
        ],
        [
          "k8s/13",
          "helm v3 中为什么要弃用 tiller⭐️"
        ],
        [
          "k8s/41",
          "k8s 由那些组件组成"
        ],
        [
          "k8s/96",
          "k8s 中的 QoS 有哪几种类型⭐️"
        ],
        [
          "k8s/305",
          "在 k8s 中如何自定义 CRD 资源"
        ],
        [
          "k8s/306",
          "service mesh 是什么，能够解决什么问题"
        ],
        [
          "k8s/325",
          "在 k8s 中如何通过日志查看某条请求进入的 pod"
        ],
        [
          "k8s/355",
          "k8s 中如何删除所有 Evicted 状态的 pod⭐️"
        ],
        [
          "k8s/356",
          "k8s 中 Deployment 与 StatefulSet 有什么区别"
        ]
      ]
    }
  ],
  "/open/": [
    [
      "",
      "目录"
    ],
    {
      "name": "open",
      "title": "开放式问题",
      "collabsable": false,
      "children": [
        [
          "open/",
          "目录"
        ],
        [
          "open/38",
          "linux 有哪些发行版，你最喜欢哪一个⭐️"
        ],
        [
          "open/61",
          "你们项目中的计划任务是如何组织的⭐️"
        ],
        [
          "open/84",
          "网站性能优化都有哪些点⭐️"
        ],
        [
          "open/95",
          "你们的前端代码上线部署一次需要多长时间，需要人为干预吗⭐️"
        ],
        [
          "open/104",
          "你在工作中遇到最有挑战的事情是什么⭐️"
        ],
        [
          "open/105",
          "你在工作中遇到最受挫折的事情是什么"
        ],
        [
          "open/106",
          "你为什么从上家公司离职"
        ],
        [
          "open/114",
          "如何看待 toB 与 toC"
        ],
        [
          "open/217",
          "你对未来的工作有什么期待"
        ],
        [
          "open/218",
          "你对未来的三年规划和五年规划是什么样的⭐️"
        ],
        [
          "open/219",
          "当你入职后发现压力过大怎么办"
        ],
        [
          "open/220",
          "工作中你有没有很佩服的人"
        ],
        [
          "open/222",
          "作为技术负责人，你每天的工作是什么样的"
        ],
        [
          "open/226",
          "你相比去年，有哪些成长⭐️"
        ],
        [
          "open/228",
          "你如何看待996⭐️"
        ],
        [
          "open/232",
          "你周末都喜欢做些什么⭐️"
        ],
        [
          "open/264",
          "当一个排期五天的任务需要在两天后上线如何解决⭐️"
        ],
        [
          "open/340",
          "你做前端有多少时间花在写 css 上⭐️"
        ],
        [
          "open/387",
          "你有没有造过轮子"
        ],
        [
          "open/388",
          "你最近学习了哪些新技术⭐️"
        ],
        [
          "open/400",
          "作为 TL 如何管理团队"
        ],
        [
          "open/417",
          "你最近看的三本书是什么⭐️"
        ],
        [
          "open/488",
          "你最喜欢的三个 js 库是什么⭐️"
        ],
        [
          "open/636",
          "列举 Number、String、Array、Object、Promise 有哪些 API⭐️"
        ],
        [
          "open/654",
          "你们项目中使用了哪些依赖/第三方库"
        ]
      ]
    }
  ]
}